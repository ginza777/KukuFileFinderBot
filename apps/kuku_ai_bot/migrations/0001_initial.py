# Generated by Django 5.1.4 on 2025-08-18 00:47

import apps.kuku_ai_bot.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Auto-filled from Telegram API on save', max_length=100)),
                ('username', models.CharField(blank=True, help_text='Auto-filled from Telegram API on save', max_length=100)),
                ('token', models.CharField(help_text='The unique token provided by @BotFather', max_length=255, unique=True)),
                ('webhook_url', models.URLField(blank=True, help_text='Auto-filled on save', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Bot',
                'verbose_name_plural': 'Bots',
            },
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_chat_id', models.BigIntegerField()),
                ('message_id', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('scheduled_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcasts', to='kuku_ai_bot.bot')),
            ],
        ),
        migrations.CreateModel(
            name='SubscribeChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('channel_link', models.URLField(blank=True, max_length=255, null=True)),
                ('channel_id', models.CharField(max_length=100, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('private', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot', models.ForeignKey(blank=True, help_text='The bot that manages this channel.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscription_channels', to='kuku_ai_bot.bot')),
            ],
            options={
                'verbose_name': 'Subscription Channel',
                'verbose_name_plural': 'Subscription Channels',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram_id', models.BigIntegerField()),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_blocked', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock_language', models.CharField(choices=[('uz', 'Uzbek'), ('ru', 'Russian'), ('en', 'English'), ('tr', 'Turkish')], default='uz', max_length=10)),
                ('selected_language', models.CharField(blank=True, choices=[('uz', 'Uzbek'), ('ru', 'Russian'), ('en', 'English'), ('tr', 'Turkish')], max_length=10, null=True)),
                ('deeplink', models.TextField(blank=True, null=True)),
                ('left', models.BooleanField(default=False)),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='kuku_ai_bot.bot')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'unique_together': {('telegram_id', 'bot')},
            },
        ),
        migrations.CreateModel(
            name='SearchQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_text', models.CharField(max_length=500)),
                ('found_results', models.BooleanField(default=False)),
                ('is_deep_search', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_queries', to='kuku_ai_bot.user')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='kuku_ai_bot.user')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TgFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to=apps.kuku_ai_bot.models.upload_to)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('doc', 'DOC/DOCX'), ('zip', 'ZIP/Archive'), ('media', 'Media'), ('other', 'Other')], default='other', max_length=20)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('size_in_bytes', models.BigIntegerField(default=0)),
                ('require_subscription', models.BooleanField(default=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='kuku_ai_bot.user')),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'indexes': [models.Index(fields=['title'], name='kuku_ai_bot_title_193332_idx'), models.Index(fields=['file_type'], name='kuku_ai_bot_file_ty_7d705e_idx')],
            },
        ),
        migrations.CreateModel(
            name='BroadcastRecipient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=10)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('broadcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipients', to='kuku_ai_bot.broadcast')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcast_messages', to='kuku_ai_bot.user')),
            ],
            options={
                'unique_together': {('broadcast', 'user')},
            },
        ),
    ]
